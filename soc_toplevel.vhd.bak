library ieee;
use ieee.std_logic_1164.all;

entity soc_toplevel is
    port (
        clock                           : in    std_logic;                      -- Clock input
        hps_io_hps_io_emac1_inst_TX_CLK : out   std_logic;                      -- hps_io_emac1_inst_TX_CLK
        hps_io_hps_io_emac1_inst_TXD0   : out   std_logic;                      -- hps_io_emac1_inst_TXD0
        hps_io_hps_io_emac1_inst_TXD1   : out   std_logic;                      -- hps_io_emac1_inst_TXD1
        hps_io_hps_io_emac1_inst_TXD2   : out   std_logic;                      -- hps_io_emac1_inst_TXD2
        hps_io_hps_io_emac1_inst_TXD3   : out   std_logic;                      -- hps_io_emac1_inst_TXD3
        hps_io_hps_io_emac1_inst_RXD0   : in    std_logic;                      -- hps_io_emac1_inst_RXD0
        hps_io_hps_io_emac1_inst_MDIO   : inout std_logic;                      -- hps_io_emac1_inst_MDIO
        hps_io_hps_io_emac1_inst_MDC    : out   std_logic;                      -- hps_io_emac1_inst_MDC
        hps_io_hps_io_emac1_inst_RX_CTL : in    std_logic;                      -- hps_io_emac1_inst_RX_CTL
        hps_io_hps_io_emac1_inst_TX_CTL : out   std_logic;                      -- hps_io_emac1_inst_TX_CTL
        hps_io_hps_io_emac1_inst_RX_CLK : in    std_logic;                      -- hps_io_emac1_inst_RX_CLK
        hps_io_hps_io_emac1_inst_RXD1   : in    std_logic;                      -- hps_io_emac1_inst_RXD1
        hps_io_hps_io_emac1_inst_RXD2   : in    std_logic;                      -- hps_io_emac1_inst_RXD2
        hps_io_hps_io_emac1_inst_RXD3   : in    std_logic;                      -- hps_io_emac1_inst_RXD3
        memory_mem_a                    : out   std_logic_vector(14 downto 0);  -- Memory interface
        memory_mem_ba                   : out   std_logic_vector(2 downto 0);
        memory_mem_ck                   : out   std_logic;
        memory_mem_ck_n                 : out   std_logic;
        memory_mem_cke                  : out   std_logic;
        memory_mem_cs_n                 : out   std_logic;
        memory_mem_ras_n                : out   std_logic;
        memory_mem_cas_n                : out   std_logic;
        memory_mem_we_n                 : out   std_logic;
        memory_mem_reset_n              : out   std_logic;
        memory_mem_dq                   : inout std_logic_vector(31 downto 0);
        memory_mem_dqs                  : inout std_logic_vector(3 downto 0);
        memory_mem_dqs_n                : inout std_logic_vector(3 downto 0);
        memory_mem_odt                  : out   std_logic;
        memory_mem_dm                   : out   std_logic_vector(3 downto 0);
        memory_oct_rzqin                : in    std_logic;                      -- OCT RZQ input
        digits_export                   : out   std_logic_vector(41 downto 0)   -- Digits output
    );
end entity soc_toplevel;

architecture rtl of soc_toplevel is

    -- Component Declaration
    component soc_calc_base
        port (
            clk_clk                         : in    std_logic;                     -- Clock input
            hps_io_hps_io_emac1_inst_TX_CLK : out   std_logic;                     -- Ethernet interface
            hps_io_hps_io_emac1_inst_TXD0   : out   std_logic;
            hps_io_hps_io_emac1_inst_TXD1   : out   std_logic;
            hps_io_hps_io_emac1_inst_TXD2   : out   std_logic;
            hps_io_hps_io_emac1_inst_TXD3   : out   std_logic;
            hps_io_hps_io_emac1_inst_RXD0   : in    std_logic;
            hps_io_hps_io_emac1_inst_MDIO   : inout std_logic;
            hps_io_hps_io_emac1_inst_MDC    : out   std_logic;
            hps_io_hps_io_emac1_inst_RX_CTL : in    std_logic;
            hps_io_hps_io_emac1_inst_TX_CTL : out   std_logic;
            hps_io_hps_io_emac1_inst_RX_CLK : in    std_logic;
            hps_io_hps_io_emac1_inst_RXD1   : in    std_logic;
            hps_io_hps_io_emac1_inst_RXD2   : in    std_logic;
            hps_io_hps_io_emac1_inst_RXD3   : in    std_logic;
            memory_mem_a                    : out   std_logic_vector(14 downto 0);
            memory_mem_ba                   : out   std_logic_vector(2 downto 0);
            memory_mem_ck                   : out   std_logic;
            memory_mem_ck_n                 : out   std_logic;
            memory_mem_cke                  : out   std_logic;
            memory_mem_cs_n                 : out   std_logic;
            memory_mem_ras_n                : out   std_logic;
            memory_mem_cas_n                : out   std_logic;
            memory_mem_we_n                 : out   std_logic;
            memory_mem_reset_n              : out   std_logic;
            memory_mem_dq                   : inout std_logic_vector(31 downto 0);
            memory_mem_dqs                  : inout std_logic_vector(3 downto 0);
            memory_mem_dqs_n                : inout std_logic_vector(3 downto 0);
            memory_mem_odt                  : out   std_logic;
            memory_mem_dm                   : out   std_logic_vector(3 downto 0);
            memory_oct_rzqin                : in    std_logic;
            digits_export                   : out   std_logic_vector(41 downto 0)
        );
    end component;

begin
    -- Component Instantiation
    u_soc_calc_base: soc_calc_base
        port map (
            clk_clk                         => clock,
            hps_io_hps_io_emac1_inst_TX_CLK => hps_io_hps_io_emac1_inst_TX_CLK,
            hps_io_hps_io_emac1_inst_TXD0   => hps_io_hps_io_emac1_inst_TXD0,
            hps_io_hps_io_emac1_inst_TXD1   => hps_io_hps_io_emac1_inst_TXD1,
            hps_io_hps_io_emac1_inst_TXD2   => hps_io_hps_io_emac1_inst_TXD2,
            hps_io_hps_io_emac1_inst_TXD3   => hps_io_hps_io_emac1_inst_TXD3,
            hps_io_hps_io_emac1_inst_RXD0   => hps_io_hps_io_emac1_inst_RXD0,
            hps_io_hps_io_emac1_inst_MDIO   => hps_io_hps_io_emac1_inst_MDIO,
            hps_io_hps_io_emac1_inst_MDC    => hps_io_hps_io_emac1_inst_MDC,
            hps_io_hps_io_emac1_inst_RX_CTL => hps_io_hps_io_emac1_inst_RX_CTL,
            hps_io_hps_io_emac1_inst_TX_CTL => hps_io_hps_io_emac1_inst_TX_CTL,
            hps_io_hps_io_emac1_inst_RX_CLK => hps_io_hps_io_emac1_inst_RX_CLK,
            hps_io_hps_io_emac1_inst_RXD1   => hps_io_hps_io_emac1_inst_RXD1,
            hps_io_hps_io_emac1_inst_RXD2   => hps_io_hps_io_emac1_inst_RXD2,
            hps_io_hps_io_emac1_inst_RXD3   => hps_io_hps_io_emac1_inst_RXD3,
            memory_mem_a                    => memory_mem_a,
            memory_mem_ba                   => memory_mem_ba,
            memory_mem_ck                   => memory_mem_ck,
            memory_mem_ck_n                 => memory_mem_ck_n,
            memory_mem_cke                  => memory_mem_cke,
            memory_mem_cs_n                 => memory_mem_cs_n,
            memory_mem_ras_n                => memory_mem_ras_n,
            memory_mem_cas_n                => memory_mem_cas_n,
            memory_mem_we_n                 => memory_mem_we_n,
            memory_mem_reset_n              => memory_mem_reset_n,
            memory_mem_dq                   => memory_mem_dq,
            memory_mem_dqs                  => memory_mem_dqs,
            memory_mem_dqs_n                => memory_mem_dqs_n,
            memory_mem_odt                  => memory_mem_odt,
            memory_mem_dm                   => memory_mem_dm,
            memory_oct_rzqin                => memory_oct_rzqin,
            digits_export                   => digits_export
        );

end architecture rtl;

